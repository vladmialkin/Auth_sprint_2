version: '3'
services:
  backend:
    container_name: 'backend'
    build:
      context: ../Async_API_sprint_2
      dockerfile: ../Dockerfile
    env_file:
      - ../fastapi_solution/.env
    ports:
      - "8000:8000"
    command: "uvicorn fastapi_solution.main:app --reload --host 0.0.0.0 --port 8000"
    volumes:
      - ../fastapi_solution/:/fastapi_solution/
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  tests:
    container_name: 'tests'
    build:
      context: ../Async_API_sprint_2
      dockerfile: ../Dockerfile_tests
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: >
      sh -c "pytest -v -s /app/tests/functional/src"


  redis:
    container_name: 'redis'
    image: redis:7.2.5
    restart: always
    ports:
      - "6379:6379"
    env_file:
      - ../fastapi_solution/.env
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 2s
      timeout: 60s
      retries: 5

  elasticsearch:
    container_name: 'elasticsearch'
    image: elasticsearch:8.14.3
    env_file:
      - ../fastapi_solution/.env
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://elasticsearch:9200/_cat/health?h=status | grep -q green" ]
      interval: 2s
      timeout: 60s
      retries: 5

  proxy:
    container_name: 'nginx'
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: always