services:
  postgres:
    container_name: 'postgres_db'
    image: postgres:16
    env_file:
      - ../fastapi_solution/.env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD", "pg_isready -U app -d movies_database" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d

  backend:
    container_name: 'backend'
    build:
      context: ..
      dockerfile: Dockerfile
    env_file:
      - ../fastapi_solution/.env
    expose:
      - "8000"
    command: "uvicorn fastapi_solution.main:app --reload --host 0.0.0.0 --port 8000"

    volumes:
      - ../fastapi_solution/:/fastapi_solution/
    depends_on:
      - redis
      - elasticsearch
      - postgres

  redis:
    container_name: 'redis_db'
    image: redis:7.2.5
    restart: always
    expose:
      - "6379"
    env_file:
      - ../fastapi_solution/.env

  elasticsearch:
    container_name: 'elasticsearch'
    image: elasticsearch:8.14.3
    env_file:
      - ../fastapi_solution/.env
    volumes:
      - ./data/elasticsearch:/data
    expose:
      - "9200"
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: 'kibana'
    image: kibana:7.17.9
    ports:
      - "5601:5601"
    env_file:
      - ../fastapi_solution/.env
    depends_on:
      - elasticsearch

  etl:
    container_name: 'etl'
    restart: always
    build:
      context: ..
      dockerfile: Dockerfile_etl
    env_file:
      - ../fastapi_solution/.env
    volumes:
      - ../fastapi_solution/:/fastapi_solution/
    depends_on:
      - elasticsearch
      - postgres

  proxy:
    container_name: 'nginx'
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "8000:80"
    depends_on:
      - backend
    restart: always
